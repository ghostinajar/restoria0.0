<!-- erase_mob_blueprint_form -->
<form
  id="eraseMobBlueprintForm"
  class="sideForm"
  style="display: none"
  autocomplete="off"
>
  <ul>
    <li>
      <a class="cancelButton" id="cancelEraseMobBlueprintForm"> Cancel </a>
    </li>
  </ul>
  <h2>Erase Mob Blueprint</h2>
  <ul>
    <li>
      <label for="eraseMobSelectMob">Mob:</label>
      <select id="eraseMobSelectMob" name="eraseMobSelectMob" required>
        <!-- populated by script -->
      </select>
    </li>
    <li style="display: inline-block">
      <label style="display: inline-block" for="eraseMobConfirm1"></label>
      <input
        style="display: inline-block"
        type="checkbox"
        id="eraseMobConfirm1"
        name="eraseMobConfirm1"
        required
      />
      <label style="display: inline-block" for="eraseMobConfirm1"
        >I want to erase this mob.</label
      >
    </li>
    <li style="display: inline-block">
      <label style="display: inline-block" for="eraseMobConfirm2"></label>
      <input
        style="display: inline-block"
        type="checkbox"
        id="eraseMobConfirm2"
        name="eraseMobConfirm2"
        required
      />
      <label style="display: inline-block" for="eraseMobConfirm2"
        >I know I can't undo this.</label
      >
    </li>
  </ul>

  <ul>
    <li>
      <button type="submit">Erase Mob</button>
    </li>
  </ul>
</form>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const eraseMobBlueprintForm = document.getElementById(
      "eraseMobBlueprintForm"
    );
    const eraseMobSelectMob = document.getElementById("eraseMobSelectMob");
    let mobBlueprintNames = [];

    eraseMobBlueprintForm.addEventListener("submit", (e) => {
      e.preventDefault();
      if (mobBlueprintNames.length === 1) {
        appendMessageToTerminal({
          type: "rejection",
          content: "Don't erase your last mobBlueprint!",
        });
        activeSideBarElement.style = "display: none";
        return;
      }
      const selectedOption =
        eraseMobSelectMob.options[eraseMobSelectMob.selectedIndex];

      const eraseMobBlueprintFormData = {
        _id: eraseMobSelectMob.value,
        name: selectedOption ? selectedOption.textContent : "",
      };
      socket.emit("userSubmittedEraseMobBlueprint", eraseMobBlueprintFormData);
      eraseMobBlueprintForm.reset();
      eraseMobBlueprintForm.style.display = "none";
    });

    document
      .getElementById("cancelEraseMobBlueprintForm")
      .addEventListener("click", function () {
        eraseMobBlueprintForm.style.display = "none";
      });

    socket.on("openEraseMobBlueprintForm", (formData) => {
      mobBlueprintNames = formData.mobBlueprintNames;
      generateStringSelectOptions(
        formData.mobBlueprintNames,
        eraseMobSelectMob
      );
      resetActiveSidebarElementTo(eraseMobBlueprintForm);
    });
  });
</script>
