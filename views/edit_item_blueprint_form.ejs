<!-- edit_item_blueprint_form -->
<form
  id="editItemBlueprintForm"
  class="sideForm"
  style="display: none"
  autocomplete="off"
>
  <ul>
    <li>
      <a class="cancelButton" id="cancelEditItemBlueprintForm"> Cancel </a>
    </li>
  </ul>
  <h2>
    Edit Item
    <span class="nodeId" id="editItemIdDisplay"
      >Error: Item Id should be here</span
    >
  </h2>
  <div class="tabs">
    <button
      id="editItemFirstTabLink"
      type="button"
      class="tab-link edit-item-tab-link active"
      data-tab="editItemGeneralSection"
    >
      General
    </button>
    <button
      type="button"
      class="tab-link edit-item-tab-link"
      data-tab="editItemDescriptionSection"
    >
      Desc.
    </button>
    <button
      type="button"
      class="tab-link edit-item-tab-link"
      data-tab="editItemTagsSection"
    >
      Tags
    </button>
    <button
      id="editItemItemNodesTab"
      style="display: none"
      type="button"
      class="tab-link edit-item-tab-link"
      data-tab="editItemItemNodesSection"
    >
      ItemNodes
    </button>
    <button
      id="editItemAffixesTab"
      type="button"
      class="tab-link edit-item-tab-link"
      data-tab="editItemAffixesSection"
    >
      Affixes
    </button>
    <button
      id="editItemWeaponTab"
      style="display: none"
      type="button"
      class="tab-link edit-item-tab-link"
      data-tab="editItemWeaponPropertiesSection"
    >
      Weapon
    </button>
    <button
      id="editItemArmorTab"
      style="display: none"
      type="button"
      class="tab-link edit-item-tab-link"
      data-tab="editItemWearableLocations"
    >
      Armor
    </button>
    <button
      id="editItemSpellTab"
      style="display: none"
      type="button"
      class="tab-link edit-item-tab-link"
      data-tab="editItemSpellPropertiesSection"
    >
      Spell
    </button>
  </div>
  <section
    class="tab-content edit-item-tab-content"
    id="editItemGeneralSection"
    style="display: block"
  >
    <ul>
      <li>
        <label for="editItemSelectItem">Item:</label>
        <select id="editItemSelectItem" name="editItemSelectItem" required>
          <!-- populated by script -->
        </select>
      </li>
      <li>
        <label for="editItemName">Name:</label>
        <input
          id="editItemName"
          name="editItemName"
          type="text"
          maxlength="36"
          required
        />
      </li>
      <li>
        <label for="editItemKeywords">Keywords:</label>
        <input
          id="editItemKeywords"
          name="editItemKeywords"
          maxlength="80"
          required
        />
      </li>
      <li style="display: inline-block">
        <label for="editItemPrice">Price:</label>
        <input
          style="width: 6rem"
          type="number"
          id="editItemPrice"
          name="editItemPrice"
          min="0"
          max="100000"
          value="0"
          required
        />
      </li>
      <li style="display: inline-block">
        <label style="min-width: 0" for="editItemMinimumLevel">MinLvl:</label>
        <input
          style="width: 3.9rem"
          type="number"
          id="editItemMinimumLevel"
          name="editItemMinimumLevel"
          min="0"
          max="31"
          value="0"
          required
        />
      </li>
      <li>
        <label for="editItemType">Type:</label>
        <select id="editItemType" name="editItemType" required>
          <option value="armor">armor</option>
          <option value="fishing_rod">fishing rod</option>
          <option value="gold">gold</option>
          <option value="key">key</option>
          <option value="none">none</option>
          <option value="potion">potion</option>
          <option value="scroll">scroll</option>
          <option value="token">token</option>
          <option value="treasure">treasure</option>
          <option value="wand">wand</option>
          <option value="weapon">weapon</option>
        </select>
      </li>
    </ul>
  </section>
  <section
    class="tab-content edit-item-tab-content"
    id="editItemDescriptionSection"
    style="display: none"
  >
    <h3>Description</h3>
    <ul>
      <li>
        <label for="editLookItem">Look:</label>
        <input
          id="editLookItem"
          name="editLookItem"
          type="text"
          maxlength="80"
        />
      </li>
      <li>
        <label for="editExamineItem">Examine:</label>
        <textarea
          id="editExamineItem"
          name="editExamineItem"
          type="text"
          maxlength="240"
        ></textarea>
      </li>
      <li>
        <label for="editStudyItem">Study:</label>
        <textarea
          id="editStudyItem"
          name="editStudyItem"
          type="text"
          maxlength="640"
        ></textarea>
      </li>
      <li>
        <label for="editResearchItem">Research:</label>
        <textarea
          id="editResearchItem"
          name="editResearchItem"
          type="text"
          maxlength="1600"
        ></textarea>
      </li>
    </ul>
  </section>
  <section
    class="tab-content edit-item-tab-content"
    id="editItemTagsSection"
    style="display: none"
  >
    <h3>Tags</h3>
    <ul>
      <div style="display: inline-block; width: 48%">
        <li>
          <label for="editItemCleric">Cleric:</label>
          <input type="checkbox" id="editItemCleric" name="editItemCleric" />
        </li>
        <li>
          <label for="editItemMage">Mage:</label>
          <input type="checkbox" id="editItemMage" name="editItemMage" />
        </li>
        <li>
          <label for="editItemRogue">Rogue:</label>
          <input type="checkbox" id="editItemRogue" name="editItemRogue" />
        </li>
        <li>
          <label for="editItemWarrior">Warrior:</label>
          <input type="checkbox" id="editItemWarrior" name="editItemWarrior" />
        </li>
        <li>
          <label for="editItemDark">Dark:</label>
          <input type="checkbox" id="editItemDark" name="editItemDark" />
        </li>
        <li>
          <label for="editItemNeutral">Neutral:</label>
          <input type="checkbox" id="editItemNeutral" name="editItemNeutral" />
        </li>
        <li>
          <label for="editItemLight">Light:</label>
          <input type="checkbox" id="editItemLight" name="editItemLight" />
        </li>
      </div>
      <div style="display: inline-block; width: 48%">
        <li>
          <label for="editItemFood">Food:</label>
          <input type="checkbox" id="editItemFood" name="editItemFood" />
        </li>
        <li>
          <label for="editItemLamp">Lamp:</label>
          <input type="checkbox" id="editItemLamp" name="editItemLamp" />
        </li>
        <li>
          <label for="editItemHidden">Hidden:</label>
          <input type="checkbox" id="editItemHidden" name="editItemHidden" />
        </li>
        <li>
          <label for="editItemFixture">Fixture:</label>
          <input type="checkbox" id="editItemFixture" name="editItemFixture" />
        </li>
        <li>
          <label for="editItemQuest">Quest:</label>
          <input type="checkbox" id="editItemQuest" name="editItemQuest" />
        </li>
        <li>
          <label for="editItemTemporary">Temporary:</label>
          <input
            type="checkbox"
            id="editItemTemporary"
            name="editItemTemporary"
          />
        </li>
        <li>
          <label for="editItemContainer">Container:</label>
          <input
            type="checkbox"
            id="editItemContainer"
            name="editItemContainer"
          />
        </li>
      </div>
    </ul>
  </section>
  <section
    class="tab-content edit-item-tab-content"
    id="editItemItemNodesSection"
    style="display: none"
  >
    <h3>Item Nodes</h3>
    <ul>
      <li>
        <label for="editItemCapacity">Capacity:</label>
        <input
          style="width: 6rem"
          type="number"
          id="editItemCapacity"
          name="editItemCapacity"
          min="0"
          max="200"
          value="1"
          required
        />
      </li>
    </ul>
    <ul class="nodeList" id="editItemItemNodeList">
      <!-- loaded via script -->
    </ul>
    <ul class="addNodeContainer">
      <li>
        <!-- item select and add button -->
        <select
          id="editItemItemNodeSelect"
          name="editItemItemNodeSelect"
          required
        >
          <!-- populated by script -->
        </select>
        <button type="button" class="addNode" id="editItemItemNodeAdd">
          add
        </button>
      </li>
    </ul>
  </section>
  <section
    class="tab-content edit-item-tab-content"
    id="editItemAffixesSection"
    style="display: none"
  >
    <h3>Affixes</h3>
    <ul>
      <li>
        <label for="editItemAffix1">Affix1:</label>
        <select id="editItemAffix1" name="editItemAffix1" required>
          <option value="none">none</option>
          <option value="armor">armor</option>
          <option value="charisma">charisma</option>
          <option value="constitution">constitution</option>
          <option value="damage_bonus">damage_bonus</option>
          <option value="dexterity">dexterity</option>
          <option value="health">health</option>
          <option value="health_regen">health_regen</option>
          <option value="hit_bonus">hit_bonus</option>
          <option value="intelligence">intelligence</option>
          <option value="mana">mana</option>
          <option value="mana_regen">mana_regen</option>
          <option value="movement">movement</option>
          <option value="resist_cold">resist_cold</option>
          <option value="resist_electric">resist_electric</option>
          <option value="resist_fire">resist_fire</option>
          <option value="spell_save">spell_save</option>
          <option value="stamina">stamina</option>
          <option value="strength">strength</option>
          <option value="wisdom">wisdom</option>
        </select>
      </li>
      <li>
        <label for="editItemAffix2">Affix2:</label>
        <select id="editItemAffix2" name="editItemAffix2" required>
          <option value="none">none</option>
          <option value="armor">armor</option>
          <option value="charisma">charisma</option>
          <option value="constitution">constitution</option>
          <option value="damage_bonus">damage_bonus</option>
          <option value="dexterity">dexterity</option>
          <option value="health">health</option>
          <option value="health_regen">health_regen</option>
          <option value="hit_bonus">hit_bonus</option>
          <option value="intelligence">intelligence</option>
          <option value="mana">mana</option>
          <option value="mana_regen">mana_regen</option>
          <option value="movement">movement</option>
          <option value="resist_cold">resist_cold</option>
          <option value="resist_electric">resist_electric</option>
          <option value="resist_fire">resist_fire</option>
          <option value="spell_save">spell_save</option>
          <option value="stamina">stamina</option>
          <option value="strength">strength</option>
          <option value="wisdom">wisdom</option>
        </select>
      </li>
      <li>
        <label for="editItemAffix3">Affix3:</label>
        <select id="editItemAffix3" name="editItemAffix3" required>
          <option value="none">none</option>
          <option value="armor">armor</option>
          <option value="charisma">charisma</option>
          <option value="constitution">constitution</option>
          <option value="damage_bonus">damage_bonus</option>
          <option value="dexterity">dexterity</option>
          <option value="health">health</option>
          <option value="health_regen">health_regen</option>
          <option value="hit_bonus">hit_bonus</option>
          <option value="intelligence">intelligence</option>
          <option value="mana">mana</option>
          <option value="mana_regen">mana_regen</option>
          <option value="movement">movement</option>
          <option value="resist_cold">resist_cold</option>
          <option value="resist_electric">resist_electric</option>
          <option value="resist_fire">resist_fire</option>
          <option value="spell_save">spell_save</option>
          <option value="stamina">stamina</option>
          <option value="strength">strength</option>
          <option value="wisdom">wisdom</option>
        </select>
      </li>
    </ul>
  </section>
  <section
    id="editItemWeaponPropertiesSection"
    style="display: none"
    class="tab-content edit-item-tab-content"
  >
    <h3>Weapon Properties</h3>
    <ul>
      <li style="display: inline-block">
        <label
          style="min-width: 0; margin-right: 0"
          for="editItemDamageDieQuantity"
          >Damage:</label
        >
        <input
          style="width: 3.4rem"
          type="number"
          id="editItemDamageDieQuantity"
          name="editItemDamageDieQuantity"
          min="1"
          max="9"
          value="1"
          required
        />
      </li>
      <li style="display: inline-block">
        <label
          style="min-width: 0; margin-left: 0; margin-right: 0"
          for="editItemDamageDieSides"
          >d</label
        >
        <input
          style="width: 3.9rem"
          type="number"
          id="editItemDamageDieSides"
          name="editItemDamageDieSides"
          min="4"
          max="12"
          value="4"
          required
        />
      </li>
      <li style="display: inline-block">
        <label
          style="min-width: 0; margin-left: 0"
          for="editItemDamageType"
        ></label>
        <select id="editItemDamageType" name="editItemDamageType" required>
          <option value="bludgeoning">bludgeoning</option>
          <option value="piercing">piercing</option>
          <option value="slashing">slashing</option>
          <option value="fire">fire</option>
          <option value="cold">cold</option>
          <option value="electricity">electricity</option>
        </select>
      </li>
      <li>
        <label for="editItemIsFinesse">Finesse:</label>
        <input
          type="checkbox"
          id="editItemIsFinesse"
          name="editItemIsFinesse"
        />
      </li>
      <li>
        <label for="editItemIsLight">Light:</label>
        <input type="checkbox" id="editItemIsLight" name="editItemIsLight" />
      </li>
      <li>
        <label for="editItemIsReach">Reach:</label>
        <input type="checkbox" id="editItemIsReach" name="editItemIsReach" />
      </li>
      <li>
        <label for="editItemIsRanged">Ranged:</label>
        <input type="checkbox" id="editItemIsRanged" name="editItemIsRanged" />
      </li>
      <li>
        <label for="editItemIsTwohand">TwoHand:</label>
        <input
          type="checkbox"
          id="editItemIsTwohand"
          name="editItemIsTwohand"
        />
      </li>
    </ul>
  </section>
  <section
    class="tab-content edit-item-tab-content"
    id="editItemWearableLocations"
    style="display: none"
  >
    <h3>Wearable Locations</h3>
    <ul>
      <li>
        <label for="editItemHead">Head:</label>
        <input type="checkbox" id="editItemHead" name="editItemHead" />
      </li>
      <li>
        <label for="editItemEars">Ears:</label>
        <input type="checkbox" id="editItemEars" name="editItemEars" />
      </li>
      <li>
        <label for="editItemNeck">Neck:</label>
        <input type="checkbox" id="editItemNeck" name="editItemNeck" />
      </li>
      <li>
        <label for="editItemShoulders">Shoulders:</label>
        <input
          type="checkbox"
          id="editItemShoulders"
          name="editItemShoulders"
        />
      </li>
      <li>
        <label for="editItemBody">Body:</label>
        <input type="checkbox" id="editItemBody" name="editItemBody" />
      </li>
      <li>
        <label for="editItemArms">Arms:</label>
        <input type="checkbox" id="editItemArms" name="editItemArms" />
      </li>
      <li>
        <label for="editItemWrists">Wrists:</label>
        <input type="checkbox" id="editItemWrists" name="editItemWrists" />
      </li>
      <li>
        <label for="editItemHands">Hands:</label>
        <input type="checkbox" id="editItemHands" name="editItemHands" />
      </li>
      <li>
        <label for="editItemFingers">Fingers:</label>
        <input type="checkbox" id="editItemFingers" name="editItemFingers" />
      </li>
      <li>
        <label for="editItemWaist">Waist:</label>
        <input type="checkbox" id="editItemWaist" name="editItemWaist" />
      </li>
      <li>
        <label for="editItemLegs">Legs:</label>
        <input type="checkbox" id="editItemLegs" name="editItemLegs" />
      </li>
      <li>
        <label for="editItemFeet">Feet:</label>
        <input type="checkbox" id="editItemFeet" name="editItemFeet" />
      </li>
      <li>
        <label for="editItemShield">Shield:</label>
        <input type="checkbox" id="editItemShield" name="editItemShield" />
      </li>
    </ul>
  </section>
  <section
    id="editItemSpellPropertiesSection"
    style="display: none"
    class="tab-content edit-item-tab-content"
  >
    <h3>Spell Properties</h3>
    <ul>
      <li style="display: inline-block">
        <label for="editItemSpell">Spell:</label>
        <select id="editItemSpell" name="editItemSpell" required>
          <option value="none">none</option>
          <option value="arcane eye">arcane eye</option>
          <option value="berserk">berserk</option>
          <option value="bless">bless</option>
          <option value="blind">blind</option>
          <option value="blink">blink</option>
          <option value="blizzard">blizzard</option>
          <option value="blood magic">blood magic</option>
          <option value="breadcrumbs">breadcrumbs</option>
          <option value="breathe water">breathe water</option>
          <option value="bubble">bubble</option>
          <option value="charm">charm</option>
          <option value="cold">cold</option>
          <option value="color spray">color spray</option>
          <option value="conjure elemental">conjure elemental</option>
          <option value="create food">create food</option>
          <option value="create water">create water</option>
          <option value="cure blind">cure blind</option>
          <option value="cure fatigue">cure fatigue</option>
          <option value="cure poison">cure poison</option>
          <option value="curse">curse</option>
          <option value="dimension door">dimension door</option>
          <option value="discern spirit">discern spirit</option>
          <option value="disintegrate">disintegrate</option>
          <option value="dispel magic">dispel magic</option>
          <option value="drain">drain</option>
          <option value="echo spirit">echo spirit</option>
          <option value="faerie fire">faerie fire</option>
          <option value="farsight">farsight</option>
          <option value="fatigue">fatigue</option>
          <option value="fear">fear</option>
          <option value="fire">fire</option>
          <option value="firestorm">firestorm</option>
          <option value="gate">gate</option>
          <option value="harm">harm</option>
          <option value="heal">heal</option>
          <option value="identify">identify</option>
          <option value="infravision">infravision</option>
          <option value="invisibility">invisibility</option>
          <option value="levitate">levitate</option>
          <option value="lift curse">lift curse</option>
          <option value="lightning">lightning</option>
          <option value="locate object">locate object</option>
          <option value="magic missile">magic missile</option>
          <option value="manashield">manashield</option>
          <option value="mass invisibility">mass invisibility</option>
          <option value="mass levitate">mass levitate</option>
          <option value="mass refresh">mass refresh</option>
          <option value="minor creation">minor creation</option>
          <option value="mirage">mirage</option>
          <option value="mirror images">mirror images</option>
          <option value="one heart">one heart</option>
          <option value="poison">poison</option>
          <option value="protect">protect</option>
          <option value="refresh">refresh</option>
          <option value="resist cold">resist cold</option>
          <option value="resist electric">resist electric</option>
          <option value="resist fire">resist fire</option>
          <option value="resurrect">resurrect</option>
          <option value="rot">rot</option>
          <option value="scry">scry</option>
          <option value="see invisible">see invisible</option>
          <option value="sense life">sense life</option>
          <option value="sense presence">sense presence</option>
          <option value="shield">shield</option>
          <option value="sleep">sleep</option>
          <option value="spirit armor">spirit armor</option>
          <option value="spirit bolt">spirit bolt</option>
          <option value="spirit shock">spirit shock</option>
          <option value="steal">steal</option>
          <option value="stone skin">stone skin</option>
          <option value="strength">strength</option>
          <option value="summon">summon</option>
          <option value="teleport">teleport</option>
          <option value="thorns">thorns</option>
          <option value="track">track</option>
          <option value="tremor">tremor</option>
          <option value="visit">visit</option>
          <option value="weaken">weaken</option>
          <option value="word of recall">word of recall</option>
        </select>
      </li>
      <li style="display: inline-block">
        <label for="editItemSpellLevel">Level:</label>
        <input
          style="width: 4rem"
          type="number"
          id="editItemSpellLevel"
          name="editItemSpellLevel"
          min="1"
          max="31"
          value="1"
          required
        />
      </li>
      <li style="display: inline-block">
        <label for="editItemSpellCharges">Charges:</label>
        <input
          style="width: 4rem"
          type="number"
          id="editItemSpellCharges"
          name="editItemSpellCharges"
          min="1"
          max="20"
          value="1"
          required
        />
      </li>
    </ul>
  </section>
  <section>
    <ul>
      <li>
        <button type="submit">Update Item</button>
      </li>
    </ul>
  </section>
</form>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const editItemBlueprintForm = document.getElementById(
      "editItemBlueprintForm"
    );
    const editItemTabLinks = document.querySelectorAll(".edit-item-tab-link");
    const editItemTabContents = document.querySelectorAll(
      ".edit-item-tab-content"
    );
    const editItemItemNodesTab = document.getElementById(
      "editItemItemNodesTab"
    );
    const editItemArmorTab = document.getElementById("editItemArmorTab");
    const editItemAffixesTab = document.getElementById("editItemAffixesTab");
    const editItemWeaponTab = document.getElementById("editItemWeaponTab");
    const editItemSpellTab = document.getElementById("editItemSpellTab");
    const editItemIdDisplay = document.getElementById("editItemIdDisplay");

    const editItemSelectItem = document.getElementById("editItemSelectItem");
    const editItemName = document.getElementById("editItemName");
    const editItemKeywords = document.getElementById("editItemKeywords");
    const editItemPrice = document.getElementById("editItemPrice");
    const editItemMinimumLevel = document.getElementById(
      "editItemMinimumLevel"
    );
    const editItemType = document.getElementById("editItemType");

    const editItemWeaponPropertiesSection = document.getElementById(
      "editItemWeaponPropertiesSection"
    );
    const editItemDamageDieQuantity = document.getElementById(
      "editItemDamageDieQuantity"
    );
    const editItemDamageDieSides = document.getElementById(
      "editItemDamageDieSides"
    );
    const editItemDamageType = document.getElementById("editItemDamageType");
    const editItemIsFinesse = document.getElementById("editItemIsFinesse");
    const editItemIsLight = document.getElementById("editItemIsLight");
    const editItemIsReach = document.getElementById("editItemIsReach");
    const editItemIsRanged = document.getElementById("editItemIsRanged");
    const editItemIsTwohand = document.getElementById("editItemIsTwohand");

    const editItemSpellPropertiesSection = document.getElementById(
      "editItemSpellPropertiesSection"
    );
    const editItemSpell = document.getElementById("editItemSpell");
    const editItemSpellLevel = document.getElementById("editItemSpellLevel");
    const editItemSpellCharges = document.getElementById(
      "editItemSpellCharges"
    );

    const editLookItem = document.getElementById("editLookItem");
    const editExamineItem = document.getElementById("editExamineItem");
    const editStudyItem = document.getElementById("editStudyItem");
    const editResearchItem = document.getElementById("editResearchItem");

    const editItemCleric = document.getElementById("editItemCleric");
    const editItemMage = document.getElementById("editItemMage");
    const editItemRogue = document.getElementById("editItemRogue");
    const editItemWarrior = document.getElementById("editItemWarrior");
    const editItemDark = document.getElementById("editItemDark");
    const editItemNeutral = document.getElementById("editItemNeutral");
    const editItemLight = document.getElementById("editItemLight");
    const editItemFood = document.getElementById("editItemFood");
    const editItemLamp = document.getElementById("editItemLamp");
    const editItemHidden = document.getElementById("editItemHidden");
    const editItemFixture = document.getElementById("editItemFixture");
    const editItemQuest = document.getElementById("editItemQuest");
    const editItemTemporary = document.getElementById("editItemTemporary");
    const editItemContainer = document.getElementById("editItemContainer");

    const editItemCapacity = document.getElementById("editItemCapacity");
    // nodeList ul elements
    const editItemItemNodeList = document.getElementById(
      "editItemItemNodeList"
    );
    const editItemItemNodeSelect = document.getElementById(
      "editItemItemNodeSelect"
    );

    const editItemAffix1 = document.getElementById("editItemAffix1");
    const editItemAffix2 = document.getElementById("editItemAffix2");
    const editItemAffix3 = document.getElementById("editItemAffix3");

    const editItemHead = document.getElementById("editItemHead");
    const editItemEars = document.getElementById("editItemEars");
    const editItemNeck = document.getElementById("editItemNeck");
    const editItemShoulders = document.getElementById("editItemShoulders");
    const editItemBody = document.getElementById("editItemBody");
    const editItemArms = document.getElementById("editItemArms");
    const editItemWrists = document.getElementById("editItemWrists");
    const editItemHands = document.getElementById("editItemHands");
    const editItemFingers = document.getElementById("editItemFingers");
    const editItemWaist = document.getElementById("editItemWaist");
    const editItemLegs = document.getElementById("editItemLegs");
    const editItemFeet = document.getElementById("editItemFeet");
    const editItemShield = document.getElementById("editItemShield");

    // to hold data from server on "edit item" command
    let selectedItem;
    let itemBlueprintList;
    let itemBlueprintFullData;
    let selectedItemId = "";

    // Tab menu listeners
    editItemTabLinks.forEach((link) => {
      link.addEventListener("click", function () {
        // Remove active class from all tab links and sections
        editItemTabLinks.forEach((link) => link.classList.remove("active"));
        editItemTabContents.forEach((section) =>
          section.classList.remove("active")
        );
        editItemTabContents.forEach(
          (section) => (section.style.display = "none")
        );

        // Add active class to the clicked tab and corresponding section
        this.classList.add("active");
        const target = document.getElementById(this.getAttribute("data-tab"));
        target.classList.add("active");
        target.style.display = "block";
      });
    });

    editItemBlueprintForm.addEventListener("submit", (e) => {
      e.preventDefault();
      // TODO move weaponStats, spellCharges, and wearableLocations
      // out of this object definition, and add them conditionally
      // based on relevant item type before sending to server
      // (no need for this object to contain irrelevant properties,
      // and they are optional in the type)
      const editItemBlueprintFormData = {
        name: editItemName.value || "no item name",
        keywords: editItemKeywords.value.split(/[ ,]+/) || "",
        price: editItemPrice.value || 0,
        minimumLevel: editItemMinimumLevel.value || 0,
        itemType: editItemType.value,
        description: {
          look: editLookItem.value || "",
          examine: editExamineItem.value || "",
          study: editStudyItem.value || "",
          research: editResearchItem.value || "",
        },
        tags: {
          cleric: editItemCleric.checked || false,
          mage: editItemMage.checked || false,
          rogue: editItemRogue.checked || false,
          warrior: editItemWarrior.checked || false,
          dark: editItemDark.checked || false,
          neutral: editItemNeutral.checked || false,
          light: editItemLight.checked || false,
          guild: false,
          food: editItemFood.checked || false,
          lamp: editItemLamp.checked || false,
          hidden: editItemHidden.checked || false,
          fixture: editItemFixture.checked || false,
          quest: editItemQuest.checked || false,
          temporary: editItemTemporary.checked || false,
          container: editItemContainer.checked || false,
        },
      };
      if (editItemBlueprintFormData.itemType === "weapon") {
        editItemBlueprintFormData.weaponStats = {
          damageDieQuantity: editItemDamageDieQuantity.value || 1,
          damageDieSides: editItemDamageDieSides.value || 4,
          damageType: editItemDamageType.value || "bludgeoning",
          isFinesse: editItemIsFinesse.checked || false,
          isLight: editItemIsLight.checked || false,
          isReach: editItemIsReach.checked || false,
          isRanged: editItemIsRanged.checked || false,
          isTwohand: editItemIsTwohand.checked || false,
        };
      }
      if (
        editItemBlueprintFormData.itemType === "potion" ||
        editItemBlueprintFormData.itemType === "scroll" ||
        editItemBlueprintFormData.itemType === "wand"
      ) {
        editItemBlueprintFormData.spellCharges = {
          name: editItemSpell.value || "heal",
          level: editItemSpellLevel.value || 1,
          maxCharges: editItemSpellCharges.value || 1,
        };
      }
      if (editItemFood) {
        editItemBlueprintFormData.spellCharges = {
          name: editItemSpell.value || "none",
          level: editItemSpellLevel.value || 1,
          maxCharges: editItemSpellCharges.value || 1,
        };
      }
      if (editItemBlueprintFormData.itemType === "armor") {
        editItemBlueprintFormData.wearableLocations = {
          head: editItemHead.checked || false,
          ears: editItemEars.checked || false,
          neck: editItemNeck.checked || false,
          shoulders: editItemShoulders.checked || false,
          body: editItemBody.checked || false,
          arms: editItemArms.checked || false,
          wrist1: editItemWrists.checked || false,
          wrist2: editItemWrists.checked || false,
          hands: editItemHands.checked || false,
          finger1: editItemFingers.checked || false,
          finger2: editItemFingers.checked || false,
          waist: editItemWaist.checked || false,
          legs: editItemLegs.checked || false,
          feet: editItemFeet.checked || false,
          shield: editItemShield.checked || false,
        };
      }
      if (editItemBlueprintFormData.tags.container) {
        editItemBlueprintFormData.capacity = editItemCapacity || 10;
        editItemBlueprintFormData.itemNodes = selectedItem.itemNodes;
      }
      if (
        editItemBlueprintFormData.itemType === "armor" ||
        editItemBlueprintFormData.itemType === "weapon"
      ) {
        editItemBlueprintFormData.affixes = [];
        if (editItemAffix1.value !== "none") {
          editItemBlueprintFormData.affixes.push({
            affixType: editItemAffix1.value,
            value: 1,
          });
        }
        if (editItemAffix2.value !== "none") {
          editItemBlueprintFormData.affixes.push({
            affixType: editItemAffix2.value,
            value: 1,
          });
        }
        if (editItemAffix3.value !== "none") {
          editItemBlueprintFormData.affixes.push({
            affixType: editItemAffix3.value,
            value: 1,
          });
        }
      }
      socket.emit(
        "userSubmittedEditItemBlueprint",
        selectedItemId,
        editItemBlueprintFormData
      );
      editItemBlueprintForm.reset();
      hideEditItemTabs();
      editItemBlueprintForm.style.display = "none"; // Hide the form after submission
    });

    document
      .getElementById("cancelEditItemBlueprintForm")
      .addEventListener("click", function () {
        hideEditItemTabs();
        editItemBlueprintForm.style.display = "none";
      });

    editItemType.addEventListener("change", function (event) {
      hideAndShowEditItemTabs();
    });

    editItemContainer.addEventListener("change", function (event) {
      // logic to hide/show parts of form based on item type
      if (event.target.checked) {
        editItemItemNodesTab.style.display = "inline-block";
      } else {
        editItemItemNodesTab.style.display = "none";
      }
    });

    // click listener logic for "Add" button on item node select
    document
      .getElementById("editItemItemNodeAdd")
      .addEventListener("click", () => {
        //push new node to list
        selectedItem.itemNodes.push({
          _id: Math.floor(Math.random() * 1000000000), // server will generate legit id on zone save
          loadsBlueprintId: editItemItemNodeSelect.value,
        });
        //reload nodeList
        clearUl(editItemItemNodeList);
        loadNodesToUlElement(
          editItemItemNodeList,
          selectedItem.itemNodes,
          itemBlueprintList
        );
      });

    editItemSelectItem.addEventListener("change", (e) => {
      selectedItemId = e.target.value;
      clearUl(editItemItemNodeList);
      populateEditItemFieldsFromId(selectedItemId);
      hideAndShowEditItemTabs();
    });

    editItemFood.addEventListener("change", (e) => {
      hideAndShowEditItemTabs();
    });

    socket.on("openEditItemBlueprintForm", (formData) => {
      itemBlueprintFullData = formData.itemBlueprintFullData;
      itemBlueprintList = formData.itemBlueprintList;

      // prepare fresh editItemBlueprintForm
      editItemBlueprintForm.reset();
      clearUl(editItemItemNodeList);
      generateStringSelectOptions(
        itemBlueprintList,
        document.getElementById("editItemItemNodeSelect")
      );

      //reset/hide open forms, show editItemBlueprintForm
      activeForm.reset();
      activeForm.style.display = "none";
      activeForm = editItemBlueprintForm;
      activeForm.style.display = "block";
      document.querySelector("#editItemFirstTabLink").click();
      input.value = "";
      generateStringSelectOptions(
        formData.itemBlueprintList,
        document.getElementById("editItemSelectItem")
      );
      selectedItemId = itemBlueprintList[0].id;
      populateEditItemFieldsFromId(selectedItemId);
      hideAndShowEditItemTabs();
    });

    function hideEditItemTabs() {
      editItemWeaponTab.style.display = "none";
      editItemArmorTab.style.display = "none";
      editItemItemNodesTab.style.display = "none";
      editItemSpellTab.style.display = "none";
      editItemAffixesTab.style.display = "none";
    }

    function populateEditItemFieldsFromId(selectedItemId) {
      // Find the selected item data
      selectedItem = itemBlueprintFullData.find(
        (item) => item._id === selectedItemId
      );
      if (selectedItem) {
        // Populate the form fields
        editItemIdDisplay.textContent =
          `Id: ${selectedItem._id}` || "error: no itemId";
        editItemName.value = selectedItem.name || "";
        editItemKeywords.value = selectedItem.keywords.join(", ") || "";
        editItemPrice.value = selectedItem.price || 0;
        editItemMinimumLevel.value = selectedItem.minimumLevel || 0;
        editItemType.value = selectedItem.itemType || "none";

        if (selectedItem.weaponStats) {
          editItemDamageDieQuantity.value =
            selectedItem.weaponStats.damageDieQuantity;
          editItemDamageDieSides.value =
            selectedItem.weaponStats.damageDieSides;
          editItemDamageType.value = selectedItem.weaponStats.damageType;
          editItemIsFinesse.checked = selectedItem.weaponStats.isFinesse;
          editItemIsLight.checked = selectedItem.weaponStats.isLight;
          editItemIsReach.checked = selectedItem.weaponStats.isReach;
          editItemIsRanged.checked = selectedItem.weaponStats.isRanged;
          editItemIsTwohand.checked = selectedItem.weaponStats.isTwohand;
        }

        if (selectedItem.spellCharges) {
          editItemSpell.value = selectedItem.spellCharges.name || "none";
          editItemSpellLevel.value = selectedItem.spellCharges.level;
          editItemSpellCharges.value = selectedItem.spellCharges.maxCharges;
        }

        editLookItem.value = selectedItem.description.look || "";
        editExamineItem.value = selectedItem.description.examine || "";
        editStudyItem.value = selectedItem.description.study || "";
        editResearchItem.value = selectedItem.description.research || "";

        editItemCleric.checked = selectedItem.tags.cleric || true;
        editItemMage.checked = selectedItem.tags.mage || true;
        editItemRogue.checked = selectedItem.tags.rogue || true;
        editItemWarrior.checked = selectedItem.tags.warrior || true;
        editItemDark.checked = selectedItem.tags.dark || true;
        editItemNeutral.checked = selectedItem.tags.neutral || true;
        editItemLight.checked = selectedItem.tags.light || true;
        editItemFood.checked = selectedItem.tags.food || false;
        editItemLamp.checked = selectedItem.tags.lamp || false;
        editItemHidden.checked = selectedItem.tags.hidden || false;
        editItemFixture.checked = selectedItem.tags.fixture || false;
        editItemQuest.checked = selectedItem.tags.quest || false;
        editItemTemporary.checked = selectedItem.tags.temporary || false;
        editItemContainer.checked = selectedItem.tags.container || false;

        editItemCapacity.value = selectedItem.capacity || 0;
        if (selectedItem.itemNodes) {
          loadNodesToUlElement(
            editItemItemNodeList,
            selectedItem.itemNodes,
            itemBlueprintList
          );
        }

        if (
          selectedItem.affixes &&
          (selectedItem.itemType === "weapon" ||
            selectedItem.itemType === "armor")
        ) {
          if (selectedItem.affixes[0]) {
            editItemAffix1.value = selectedItem.affixes[0].affixType || "none";
          }
          if (selectedItem.affixes[1]) {
            editItemAffix2.value = selectedItem.affixes[1].affixType || "none";
          }
          if (selectedItem.affixes[2]) {
            editItemAffix3.value = selectedItem.affixes[2].affixType || "none";
          }
        }

        if (selectedItem.wearableLocations) {
          editItemHead.checked = selectedItem.wearableLocations.head || false;
          editItemEars.checked = selectedItem.wearableLocations.ears || false;
          editItemNeck.checked = selectedItem.wearableLocations.neck || false;
          editItemShoulders.checked =
            selectedItem.wearableLocations.shoulders || false;
          editItemBody.checked = selectedItem.wearableLocations.body || false;
          editItemArms.checked = selectedItem.wearableLocations.arms || false;
          editItemWrists.checked =
            selectedItem.wearableLocations.wrist1 || false;
          editItemHands.checked = selectedItem.wearableLocations.hands || false;
          editItemFingers.checked =
            selectedItem.wearableLocations.finger1 || false;
          editItemWaist.checked = selectedItem.wearableLocations.waist || false;
          editItemLegs.checked = selectedItem.wearableLocations.legs || false;
          editItemFeet.checked = selectedItem.wearableLocations.feet || false;
          editItemShield.checked =
            selectedItem.wearableLocations.shield || false;
        }
      }
    }

    function hideAndShowEditItemTabs() {
      hideEditItemTabs();
      switch (editItemType.value) {
        case "potion":
        case "scroll":
        case "wand":
          editItemSpellTab.style.display = "inline-block";
          break;
        case "weapon":
          editItemWeaponTab.style.display = "inline-block";
          editItemAffixesTab.style.display = "inline-block";
          break;
        case "armor":
          editItemArmorTab.style.display = "inline-block";
          editItemAffixesTab.style.display = "inline-block";
          break;
        default:
          break;
      }
      if (editItemContainer.checked) {
        editItemItemNodesTab.style.display = "inline-block";
      } else {
        editItemItemNodesTab.style.display = "none";
      }
      if (editItemFood.checked) {
        editItemSpellTab.style.display = "inline-block";
      } else {
        editItemSpellTab.style.display = "none";
      }
    }
  });
</script>
